//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_52
.address_size 64

	// .globl	__raygen__rtx1
.const .align 8 .b8 params[32];

.visible .entry __raygen__rtx1()
{
	.reg .f32 	%f<13>;
	.reg .b32 	%r<72>;
	.reg .b64 	%rd<4>;


	ld.const.f32 	%f1, [params+20];
	ld.const.f32 	%f10, [params+24];
	sub.f32 	%f8, %f10, %f1;
	mov.b32 	%r40, %f1;
	ld.const.u64 	%rd1, [params];
	mov.f32 	%f4, 0f3F800000;
	mov.f32 	%f9, 0f00000000;
	mov.u32 	%r34, 255;
	mov.u32 	%r39, 1;
	mov.u32 	%r71, 0;
	// begin inline asm
	call(%r1,%r2,%r3,%r4,%r5,%r6,%r7,%r8,%r9,%r10,%r11,%r12,%r13,%r14,%r15,%r16,%r17,%r18,%r19,%r20,%r21,%r22,%r23,%r24,%r25,%r26,%r27,%r28,%r29,%r30,%r31,%r32),_optix_trace_typed_32,(%r71,%rd1,%f1,%f9,%f9,%f4,%f9,%f9,%f9,%f8,%f9,%r34,%r39,%r71,%r71,%r71,%r39,%r40,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71);
	// end inline asm
	mov.b32 	%f11, %r1;
	add.f32 	%f12, %f1, %f11;
	ld.const.u64 	%rd2, [params+8];
	cvta.to.global.u64 	%rd3, %rd2;
	st.global.f32 	[%rd3], %f12;
	ret;

}
	// .globl	__closesthit__rtx
.visible .entry __closesthit__rtx()
{
	.reg .f32 	%f<2>;
	.reg .b32 	%r<3>;


	// begin inline asm
	call (%f1), _optix_get_ray_tmax, ();
	// end inline asm
	mov.b32 	%r2, %f1;
	mov.u32 	%r1, 0;
	// begin inline asm
	call _optix_set_payload, (%r1, %r2);
	// end inline asm
	ret;

}
	// .globl	__raygen__rtx2
.visible .entry __raygen__rtx2()
{
	.reg .f32 	%f<13>;
	.reg .b32 	%r<72>;
	.reg .b64 	%rd<4>;


	ld.const.f32 	%f1, [params+20];
	ld.const.f32 	%f10, [params+24];
	sub.f32 	%f8, %f10, %f1;
	ld.const.u64 	%rd1, [params];
	mov.f32 	%f4, 0f3F800000;
	mov.f32 	%f9, 0f00000000;
	mov.u32 	%r34, 255;
	mov.u32 	%r35, 8;
	mov.u32 	%r39, 1;
	mov.u32 	%r71, 0;
	// begin inline asm
	call(%r1,%r2,%r3,%r4,%r5,%r6,%r7,%r8,%r9,%r10,%r11,%r12,%r13,%r14,%r15,%r16,%r17,%r18,%r19,%r20,%r21,%r22,%r23,%r24,%r25,%r26,%r27,%r28,%r29,%r30,%r31,%r32),_optix_trace_typed_32,(%r71,%rd1,%f1,%f9,%f9,%f4,%f9,%f9,%f9,%f8,%f9,%r34,%r35,%r71,%r71,%r71,%r39,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71,%r71);
	// end inline asm
	mov.b32 	%f11, %r1;
	add.f32 	%f12, %f1, %f11;
	ld.const.u64 	%rd2, [params+8];
	cvta.to.global.u64 	%rd3, %rd2;
	st.global.f32 	[%rd3], %f12;
	ret;

}
	// .globl	__anyhit__rtx
.visible .entry __anyhit__rtx()
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<9>;


	mov.u32 	%r3, 0;
	// begin inline asm
	call (%r2), _optix_get_payload, (%r3);
	// end inline asm
	ld.const.u32 	%r4, [params+16];
	setp.lt.u32 	%p1, %r2, %r4;
	@%p1 bra 	$L__BB3_2;
	bra.uni 	$L__BB3_1;

$L__BB3_2:
	add.s32 	%r8, %r2, 1;
	// begin inline asm
	call _optix_set_payload, (%r3, %r8);
	// end inline asm
	// begin inline asm
	call _optix_ignore_intersection, ();
	// end inline asm
	bra.uni 	$L__BB3_3;

$L__BB3_1:
	// begin inline asm
	call (%f1), _optix_get_ray_tmax, ();
	// end inline asm
	mov.b32 	%r6, %f1;
	// begin inline asm
	call _optix_set_payload, (%r3, %r6);
	// end inline asm
	// begin inline asm
	call _optix_terminate_ray, ();
	// end inline asm

$L__BB3_3:
	ret;

}
	// .globl	__miss__rtx
.visible .entry __miss__rtx()
{
	.reg .b32 	%r<3>;


	mov.u32 	%r1, 0;
	mov.u32 	%r2, 2139095040;
	// begin inline asm
	call _optix_set_payload, (%r1, %r2);
	// end inline asm
	ret;

}

